{"version":3,"sources":["../src/infinity-scroller.js"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAEM,gB;;;;;AACJ,4BAAY,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAM,KAAN;AACA,UAAK,QAAL,GAAgB,MAAK,QAAL,CAAc,IAAd,uDAAhB;AAFiB;AAGlB;;;;wCAEmB;AAClB,MAAA,QAAQ,CAAC,gBAAT,CAA0B,QAA1B,EAAoC,KAAK,QAAzC;AACD;;;2CAEsB;AACrB,MAAA,QAAQ,CAAC,mBAAT,CAA6B,QAA7B,EAAuC,KAAK,QAA5C;AACD;;;+BAEU;AAAA,wBACwC,KAAK,KAD7C;AAAA,UACD,SADC,eACD,SADC;AAAA,UACU,eADV,eACU,eADV;AAAA,UAC2B,QAD3B,eAC2B,QAD3B;;AAET,UAAI,SAAJ,EAAe;AACb,eAAO,KAAP;AACD;;AAED,UAAI,KAAK,OAAT,EAAkB;AAChB,QAAA,MAAM,CAAC,oBAAP,CAA4B,KAAK,OAAjC;AACD;;AAED,WAAK,OAAL,GAAe,MAAM,CAAC,qBAAP,CAA6B,YAAM;AAChD,YAAI,MAAM,CAAC,WAAP,GAAqB,MAAM,CAAC,OAA5B,GAAsC,QAAQ,CAAC,IAAT,CAAc,YAAd,GAA6B,eAAvE,EAAwF;AACtF,UAAA,QAAQ;AACT;AACF,OAJc,CAAf;AAKD;;;6BAEQ;AACP,aACE,0CACI,KAAK,KAAL,CAAW,QADf,CADF;AAKD;;;;EArC4B,gB;;AAwC/B,gBAAgB,CAAC,SAAjB,GAA6B;AAC3B,EAAA,QAAQ,EAAE,mBAAU,IAAV,CAAe,UADE;AAE3B,EAAA,QAAQ,EAAE,mBAAU,IAFO;AAG3B,EAAA,SAAS,EAAE,mBAAU,IAHM;AAI3B,EAAA,eAAe,EAAE,mBAAU;AAJA,CAA7B;AAOA,gBAAgB,CAAC,YAAjB,GAAgC;AAC9B,EAAA,SAAS,EAAE,KADmB;AAE9B,EAAA,eAAe,EAAE;AAFa,CAAhC;eAKe,gB","file":"infinity-scroller.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass InfinityScroller extends Component {\n  constructor(props) {\n    super(props);\n    this.onScroll = this.onScroll.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('scroll', this.onScroll);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('scroll', this.onScroll);\n  }\n\n  onScroll() {\n    const { isLoading, remainingScroll, loadNext } = this.props;\n    if (isLoading) {\n      return false;\n    }\n\n    if (this.timeout) {\n      window.cancelAnimationFrame(this.timeout);\n    }\n\n    this.timeout = window.requestAnimationFrame(() => {\n      if (window.innerHeight + window.scrollY > document.body.scrollHeight - remainingScroll) {\n        loadNext();\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        { this.props.children }\n      </div>\n    );\n  }\n}\n\nInfinityScroller.propTypes = {\n  loadNext: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  isLoading: PropTypes.bool,\n  remainingScroll: PropTypes.number\n};\n\nInfinityScroller.defaultProps = {\n  isLoading: false,\n  remainingScroll: 400\n};\n\nexport default InfinityScroller;"]}